<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunmi.app.mapper.system.MenuMapper" >
  <resultMap id="BaseResultMap" type="com.yunmi.app.model.system.Menu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="iconCls" property="iconCls" jdbcType="VARCHAR" />
    <result column="parentId" property="parentId" jdbcType="INTEGER" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <association property="meta" javaType="com.yunmi.app.model.system.Meta">
      <result column="keepAlive" property="keepAlive" jdbcType="BIT" />
      <result column="requireAuth" property="requireAuth" jdbcType="BIT" />
    </association>
  </resultMap>
  <resultMap id="Menus2" type="com.yunmi.app.model.system.Menu" extends="BaseResultMap">
    <collection property="children" ofType="com.yunmi.app.model.system.Menu">
      <id column="id2" property="id" jdbcType="INTEGER" />
      <result column="url2" property="url" jdbcType="VARCHAR" />
      <result column="path2" property="path" jdbcType="VARCHAR" />
      <result column="component2" property="component" jdbcType="VARCHAR" />
      <result column="name2" property="name" jdbcType="VARCHAR" />
      <result column="iconCls2" property="iconCls" jdbcType="VARCHAR" />
      <result column="parentId2" property="parentId" jdbcType="INTEGER" />
      <result column="enabled2" property="enabled" jdbcType="BIT" />
      <association property="meta" javaType="com.yunmi.app.model.system.Meta">
        <result column="keepAlive2" property="keepAlive" jdbcType="BIT" />
        <result column="requireAuth2" property="requireAuth" jdbcType="BIT" />
      </association>
    </collection>
  </resultMap>
  <resultMap id="MenuWithRole" type="com.yunmi.app.model.system.Menu" extends="BaseResultMap">
    <collection property="roles" ofType="com.yunmi.app.model.system.Role">
      <id column="rid" property="id"/>
      <result column="rname" property="name"/>
      <result column="rnameZh" property="nameZh"/>
    </collection>
  </resultMap>
  <resultMap id="MenuWithChildren" type="com.yunmi.app.model.system.Menu" extends="BaseResultMap">
    <id column="id1" property="id"/>
    <result column="name1" property="name"/>
    <collection property="children" ofType="com.yunmi.app.model.system.Menu">
      <id column="id2" property="id"/>
      <result column="name2" property="name"/>
      <collection property="children" ofType="com.yunmi.app.model.system.Menu">
        <id column="id3" property="id"/>
        <result column="name3" property="name"/>
      </collection>
    </collection>
  </resultMap>

  <!-- 通用查询列 -->
  <sql id="Base_Column_List" >
    id, url, path, component, name, iconCls, keepAlive, requireAuth, parentId, enabled
  </sql>

  <select id="getMidsByRid" resultType="java.lang.Integer">
    select mid from sys_menu_role where rid=#{rid};
  </select>

  <select id="getAllMenus" resultMap="MenuWithChildren">
    select m1.`id` as id1,m1.`name` as name1,m2.`id` as id2,m2.`name` as name2,m3.`id` as id3,m3.`name` as name3 from sys_menu m1,sys_menu m2,sys_menu m3 where m1.`id`=m2.`parentId` and m2.`id`=m3.`parentId` and m3.`enabled`=true order by m1.`id`,m2.`id`,m3.`id`
  </select>

  <select id="getAllMenusWithRole" resultMap="MenuWithRole">
    SELECT m.*, r.`id` AS rid, r.`name` AS rname, r.`nameZh` AS rnameZh
    FROM sys_menu m, sys_menu_role mr, sys_role r
    WHERE m.`id` = mr.`mid`
        AND mr.`rid` = r.`id`
    ORDER BY m.`id`
  </select>

  <select id="getMenusByUserId" resultMap="Menus2">
    SELECT DISTINCT m1.*, m2.`id` AS id2, m2.`component` AS component2, m2.`enabled` AS enabled2, m2.`iconCls` AS iconCls2
        , m2.`keepAlive` AS keepAlive2, m2.`name` AS name2, m2.`parentId` AS parentId2, m2.`requireAuth` AS requireAuth2, m2.`path` AS path2
    FROM sys_menu m1, sys_menu m2, sys_user_role hrr, sys_menu_role mr
    WHERE m1.`id` = m2.`parentId`
        AND hrr.`user_id` = #{userId}
        AND hrr.`rid` = mr.`rid`
        AND mr.`mid` = m2.`id`
        AND m2.`enabled` = true
    ORDER BY m1.`id`, m2.`id`
  </select>

</mapper>